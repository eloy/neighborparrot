#!/bin/bash
#
# TODO: 
#   * Run the service as owner insted of root
#
#
# chkconfig: - 16 84
# description: Start up <%= app_name %>
#
# processname: <%= app_name %>
# config: <%= app_path %>
#
#
. /lib/lsb/init-functions

# Defaults
USER=<%= app_owner %>

# Daemon
DAEMON=<%= app_name %>
NAME=${DAEMON}
PIDFILE=/var/run/${NAME}.pid
LOGFILE=/var/log/${NAME}.log
APP_HOME=<%= app_path %>
DAEMON_HOME=/${APP_HOME}/lib/

DAEMON_ARGS="-e prod -p 80 -P ${PIDFILE} -l ${LOGFILE} -d"


RUBY=$(which ruby)

DAEMON_LOCKFILE=/var/lock/$NAME

start() {
    echo -n $"Starting ${NAME}: "
        
    cd $DAEMON_HOME
    $RUBY $DAEMON $DAEMON_ARGS

    sleep 2

    RETVAL=$?

    if [ $RETVAL -eq 0 ]; then
        touch $DAEMON_LOCKFILE
        echo "OK"
    else
        echo "FAIL"
    fi

    echo
}

stop() {
    echo -n $"Shutting down ${NAME}: "
    
    kill -s TERM `cat $PIDFILE`
    RETVAL=$?

    [ $RETVAL -eq 0 ] && /bin/rm -f $DAEMON_LOCKFILE $PIDFILE

    echo
}

status () {
    if [ ! -e "$PIDFILE" ]; then
        echo "Not running"
        return
    fi

    ps ax | grep `cat ${PIDFILE}` | grep -q $DAEMON
    RETVAL=$?
    if [ $RETVAL -eq 0 ]; then
        echo "Running."
    else
        echo "Not running."
    fi    
}

case "$1" in
    start)
        start
    ;;
    stop)
        stop
    ;;
    restart)
        stop
        start
    ;;
    status)
        status
    ;;

    *)
        echo "Usage: $SCRIPTNAME {start|stop|restart|status}" >&2
        exit 3
    ;;
esac

